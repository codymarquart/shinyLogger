stages:
  - docker
  - check
  - checkWindows
  - release
  - buildAPI

variables:
  VERSION: "0.0.1.9000"
  PKG: "shinyLogger"
  PKGL: "shinylogger"
  REG_URL: "registry.gitlab.com/clmarquart/shinylogger"

# Templates
.build_definition: &build_template
  except:
    changes:
      - "README.md"
  before_script:
    - export _R_CHECK_CRAN_INCOMING_=FALSE
    - export _R_CHECK_FORCE_SUGGESTS_=TRUE
    - mkdir -p archive/
    - Rscript -e 'update(devtools::dev_package_deps("."))'
    - cd ..; R CMD build --log $PKG || true
.check_definition: &check_template
  stage: check
  artifacts:
    paths:
      - archive/
    expire_in: 1 week
  <<: *build_template
  script:
    - R --no-site-file --no-environ --no-save --no-restore --quiet CMD check ${PKG}_${VERSION}.tar.gz --as-cran --no-manual
    - ls -al ./ || true
    - mv ./$PKG-00build.log $PKG/archive/ || true
    - mv ./$PKG.Rcheck/00check.log $PKG/archive/ || true
    - mv ./$PKG.Rcheck/00install.out $PKG/archive/ || true
    - mv ./${PKG}_${VERSION}.tar.gz $PKG/archive/
  tags:
    - docker
  allow_failure: false

# Check Steps
check:r-devel:
  image: $REG_URL/devel:current
  only:
    - master
  <<: *check_template
check:r-oldrelease:
  image: $REG_URL/oldrelease:current
  only:
    - master
  <<: *check_template
check:r-release:
  image: $REG_URL/release:current
  <<: *check_template

check:r-winbuilder:
  stage: checkWindows
  image: $REG_URL/ftp:current
  only:
    - master
  <<: *build_template
  script:
    - curl -v -T ${PKG}_${VERSION}.tar.gz ftp://win-builder.r-project.org/R-oldrelease/${PKG}_${VERSION}.tar.gz
    - curl -v -T ${PKG}_${VERSION}.tar.gz ftp://win-builder.r-project.org/R-release/${PKG}_${VERSION}.tar.gz
    - curl -v -T ${PKG}_${VERSION}.tar.gz ftp://win-builder.r-project.org/R-devel/${PKG}_${VERSION}.tar.gz
    - mv ./${PKG}_${VERSION}.tar.gz $PKG/archive/
  tags:
    - docker
  allow_failure: false

.docker_definition: &docker_template
  image: docker:stable
  stage: docker
  tags:
    - docker
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/clmarquart/$PKGL/$FILE:current -f inst/docker/r-$FILE inst/docker/
    - docker push $CI_REGISTRY/clmarquart/$PKGL/$FILE:current
  only:
    changes:
      - "inst/docker/$PKG-$FILE"
docker:release:
  variables:
    FILE: "release"
  <<: *docker_template
docker:old-release:
  variables:
    FILE: "oldrelease"
  <<: *docker_template
docker:devel:
  variables:
    FILE: "devel"
  <<: *docker_template
docker:ftp:
  variables:
    FILE: "ftp"
  <<: *docker_template
